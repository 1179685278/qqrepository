<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.by.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.by.model.User">
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_pswd" jdbcType="VARCHAR" property="userPswd" />
  </resultMap>
  <sql id="Base_Column_List">
    user_id, user_name, user_pswd
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_user
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.by.model.User">
    insert into t_user (user_id, user_name, user_pswd
      )
    values (#{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{userPswd,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.by.model.User">
    insert into t_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="userPswd != null">
        user_pswd,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPswd != null">
        #{userPswd,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.by.model.User">
    update t_user
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPswd != null">
        user_pswd = #{userPswd,jdbcType=VARCHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.by.model.User">
    update t_user
    set user_name = #{userName,jdbcType=VARCHAR},
      user_pswd = #{userPswd,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <!--五表-->
  <select id="list" resultType="userVO">
    select u.user_id,u.user_name,r.role_name,p.permission_name
    from t_user u left join ur_id ur on u.user_id = ur.user_id
    left join t_role r on ur.role_id = r.role_id
    left join rp_id rp on r.role_id=rp.role_id
    left join t_permission p on rp.permission_id = p.permission_id
  </select>

  <select id="findPermissionByUserName" parameterType="string" resultType="string">
        select p.permission_url
        from t_user u left join ur_id ur on u.user_id = ur.user_id
        left join t_role r on ur.role_id = r.role_id
        left join rp_id rp on r.role_id=rp.role_id
        left join t_permission p on rp.permission_id = p.permission_id
        where u.user_name = #{username}
    </select>

  <!--三表:用户-角色-->
  <select id="findAll" resultMap="findAllMap">
    select u.user_id user_id,u.user_name user_name,r.role_name role_name
    from
    (select * from t_user limit #{start},#{limit}) u left join ur_id ur on u.user_id = ur.user_id
    left join t_role r on ur.role_id = r.role_id
  </select>

  <resultMap id="findAllMap" type="com.by.Vo.User3VO" autoMapping="true">
      <id column="user_id" property="userId"></id>
      
      <collection property="roles" ofType="com.by.model.Role" autoMapping="true">

      </collection>
  </resultMap>

  <!--三表:角色-权限-->
  <select id="roleAndPermission" resultMap="roleAndPermissionMap">
        select r.role_id role_id,r.role_name role_name,p.permission_name permission_name
        from
        (select * from t_role limit #{start},#{limit}) r left join rp_id rp on r.role_id = rp.role_id
        left join t_permission p on rp.permission_id = p.permission_id
  </select>

  <resultMap id="roleAndPermissionMap" type="com.by.Vo.RoleVO" autoMapping="true">
    <id column="role_id" property="roleId"></id>

    <collection property="permissions" ofType="com.by.model.Permission" autoMapping="true">
    </collection>
  </resultMap>


</mapper>